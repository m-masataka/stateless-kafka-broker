version: '3.8'

services:
  rust-server:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: rust-server
    ports:
      - "9092:9092"
    volumes:
      - ./config/cluster.json:/app/config/cluster.json
    depends_on:
      - redis
      - minio
    environment:
      RUST_LOG: debug
      KAFKA_HOST: "0.0.0.0"
      KAFKA_PORT: 9092
      KAFKA_LOG_STORE_TYPE: s3
      KAFKA_LOG_STORE_S3_BUCKET: mybucket
      KAFKA_LOG_STORE_S3_PREFIX: logs
      KAFKA_LOG_STORE_S3_ENDPOINT: http://minio:9000
      KAFKA_LOG_STORE_S3_ACCESS_KEY: minioadmin
      KAFKA_LOG_STORE_S3_SECRET_KEY: minioadmin
      KAFKA_META_STORE_TYPE: redis
      KAFKA_META_STORE_REDIS_URL: redis://redis:6379
      KAFKA_INDEX_STORE_TYPE: redis
      KAFKA_INDEX_STORE_REDIS_URL: redis://redis:6379

  redis:
    image: redis:7
    container_name: redis
    ports:
      - "6379:6379"

  minio:
    image: minio/minio:latest
    container_name: minio
    ports:
      - "9000:9000"   # S3 API
      - "9001:9001"   # Console UI
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    command: server /data --console-address ":9001"
    volumes:
      - minio-data:/data

  minio-init:
    image: minio/mc
    depends_on:
      - minio
    entrypoint: >
      sh -c "
        sleep 5 &&
        mc alias set local http://minio:9000 minioadmin minioadmin &&
        mc mb local/mybucket || true
      "
volumes:
  minio-data: